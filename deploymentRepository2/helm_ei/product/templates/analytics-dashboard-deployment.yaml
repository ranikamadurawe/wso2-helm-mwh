# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-analytics-dashboard
  namespace : {{ .Release.Namespace }}
spec:
  replicas:  {{ default 1 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.replicas }}
  minReadySeconds: {{ default 75 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.minReadySeconds }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: {{ template "fullname" . }}-analytics-dashboard
      app: {{ template "fullname" . }}
      monitoring: {{ default "jmx" .Values.wso2.monitoring.prometheus.jmxJobName }}
  template:
    metadata:
      labels:
        deployment: {{ template "fullname" . }}-analytics-dashboard
        app: {{ template "fullname" . }}
        monitoring: {{ default "jmx" .Values.wso2.monitoring.prometheus.jmxJobName }}
    spec:
      initContainers:
      {{ if .Values.wso2.monitoring.enabled }}
      - name: init-jmx-exporter
        image: busybox:1.31
        command:
          - /bin/sh
          - "-c"
          - |
            set -e
            wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar -P /jmx-jar/
        volumeMounts:
          - name: shared-prometheus-jmx-jar
            mountPath: /jmx-jar
      {{ end }}
      {{ if .Values.wso2.mysql.enabled }}
      - name: init-is-db
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{ default "wso2ei-rdbms-service-mysql" .Values.wso2.mysql.host }} 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      {{ end }}
      {{ if .Values.wso2.centralizedLogging.enabled }}
      - name: init-logstash-plugins-install
        image: docker.elastic.co/logstash/logstash:{{ default "7.2.0" .Values.wso2.centralizedLogging.logstash.imageTag }}
        command:
          - /bin/bash
          - "-c"
          - |
            set -e
            ./bin/logstash-plugin install logstash-codec-multiline logstash-filter-grok
        volumeMounts:
          - name: shared-plugins
            mountPath: /usr/share/logstash/plugins/
      - name: init-elasticsearch
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of Elasticsearch Server deployment"; while ! nc -z {{ default "wso2-elasticsearch-master" .Values.wso2.centralizedLogging.logstash.elasticsearch.host }} {{ default "9200" .Values.wso2.centralizedLogging.logstash.elasticsearch.port }}; do sleep 1; printf "-"; done; echo -e "  >> Elasticsearch server has started";']
      {{ end }}
      containers:
      - name: wso2ei-analytics-dashboard
        {{ if .Values.wso2.deployment.wso2eiAnalyticsDashbaord.dockerRegistry }}
        image: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.dockerRegistry }}/{{ default "wso2ei-analytics-dashboard" .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageName }}
        {{- $tag := .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageTag }}
        {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
        {{ else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
        image: wso2/{{ default "wso2ei-analytics-dashboard" .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageName }}:{{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageTag }}
        {{ else }}
        image: docker.wso2.com/{{ default "wso2ei-analytics-dashboard" .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageName }}:{{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imageTag }}
        {{ end }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9643
          initialDelaySeconds: {{ default 20 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9643
          initialDelaySeconds: {{ default 20 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.wso2.deployment.wso2eiAnalyticsDashbaord.readinessProbe.periodSeconds }}
        imagePullPolicy: {{ default "Always" .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imagePullPolicy }}
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.resources.limits.cpu }}
        ports:
        {{- if .Values.wso2.monitoring.enabled }}
        - containerPort: 2222
          protocol: TCP
          name: metrics
        {{ end }}
        - containerPort: 9643
          protocol: "TCP"
        volumeMounts:
        - name: analytics-conf-dashboard
          mountPath: "/home/wso2carbon/wso2-config-volume/wso2/analytics/conf/dashboard"
        {{ if .Values.wso2.monitoring.enabled }}
        - name: shared-prometheus-jmx-jar
          mountPath: /home/wso2carbon/prometheus
        - name: integrator-prometheus-exporter-conf
          mountPath: /home/wso2carbon/prometheus/config.yaml
          subPath: config.yaml
        - name: analytics-dashboard-bin
          mountPath: /home/wso2carbon/wso2-config-volume/wso2/analytics/wso2/dashboard/bin
        {{ end }}
      {{ if .Values.wso2.centralizedLogging.enabled }}
        - name: shared-logs
          mountPath: /home/wso2carbon/wso2ei-6.5.0/wso2/analytics/wso2/dashboard/logs
      - name: wso2ei-logstash
        image: docker.elastic.co/logstash/logstash:{{ default "7.2.0" .Values.wso2.centralizedLogging.logstash.imageTag }}
        livenessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: {{ default 90 .Values.wso2.centralizedLogging.logstash.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 30 .Values.wso2.centralizedLogging.logstash.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: {{ default 90 .Values.wso2.centralizedLogging.logstash.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 30 .Values.wso2.centralizedLogging.logstash.readinessProbe.periodSeconds }}
        volumeMounts:
          - name: shared-logs
            mountPath: /usr/share/logstash/wso2-logs/
          - name: logstash-yml
            mountPath: /usr/share/logstash/config/logstash.yml
            subPath: logstash.yml
          - name: c5-logstash-conf
            mountPath: /usr/share/logstash/pipeline/logstash.conf
            subPath: logstash.conf
          - name: shared-plugins
            mountPath: /usr/share/logstash/plugins/
        env:
          - name: NODE_ID
            value: {{ .Release.Name }}-analytics-dashboard-node
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: logstash-elasticsearch-creds
                key: username
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: logstash-elasticsearch-creds
                key: password
          - name: ELASTICSEARCH_HOST
            value: {{ default "wso2-elasticsearch-master" .Values.wso2.centralizedLogging.logstash.elasticsearch.host }}
          - name: ELASTICSEARCH_PORT
            value: {{ default "9200" .Values.wso2.centralizedLogging.logstash.elasticsearch.port | quote }}
      {{ end }}
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/analytics-dashboard.sh stop']
      securityContext:
        runAsUser: 802
      {{- if .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.wso2.deployment.wso2eiAnalyticsDashbaord.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
      - name: wso2ei-deployment-creds
      {{ end }}
      volumes:
      - name: analytics-conf-dashboard
        configMap:
          name: analytics-conf-dashboard
      {{ if .Values.wso2.centralizedLogging.enabled }}
      - name: shared-logs
        emptyDir: {}
      - name: logstash-yml
        configMap:
          name: logstash-yml
      - name: c5-logstash-conf
        configMap:
          name: c5-logstash-conf
      - name: shared-plugins
        emptyDir: {}
      - name: logstash-elasticsearch-creds
        secret:
          secretName: logstash-elasticsearch-creds
      {{ end }}
      {{ if .Values.wso2.monitoring.enabled }}
      - name: shared-prometheus-jmx-jar
        emptyDir: {}
      - name: integrator-prometheus-exporter-conf
        configMap:
          name: integrator-prometheus-exporter-conf
      - name: analytics-dashboard-bin
        configMap:
          name: analytics-dashboard-bin
      {{ end }}
      serviceAccountName: {{ .Values.kubernetes.svcaccount }}
